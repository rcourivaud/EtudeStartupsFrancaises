ggplot(startups.with.type, aes(y=startups.with.type$Nb, x=startups.with.type$Dept, fill=startups.with.type$Classe)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle = 90, hjust = 0)) +
ggtitle("Type de Startups") +
labs(x="Type" , y = "Nombre de startups")
ggsave("Images\\StartupsParDepartements.png")
colnames.tmp <- colnames(startup.pop)
colnames(startup.pop) <- c("CODGEO",  "NbStartups","LIBGEO", "Population", "0 - 14 ans", "15 - 29 ans","30 - 40 ans",
"45 - 59 ans", "60 - 74 ans ", "75 ans et plus","NbStartups/Pop")
mat.cor.startup.pop <- cor(startup.pop[,-c(1,3)])
colnames.tmp -> colnames(startup.pop)
corrplot(mat.cor.startup.pop,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
startup.pop.without.Paris <- startups.with.type[startup.pop$CODGEO!=75,]
mat.cor.startup.pop.WO.P <- cor(startup.pop.without.Paris[,-c(1,3)])
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
mat.cor.startup.pop.WO.P
startup.pop.without.Paris
startup.pop.without.Paris <- startups.with.type[startups.with.type$Dept!=75,]
head(startup.pop.without.Paris)
mat.cor.startup.pop.WO.P <- cor(startup.pop.without.Paris[,-c(1,3)])
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
aggdata.dept.WOP <-aggregate(startup.pop.without.Paris$Nb, by=list(startup.pop.without.Paris$Dept), FUN=sum, na.rm=TRUE)
data.pop <- read.csv("CSV//AgePop.csv", header = TRUE, sep=';')
data.pop10 <- data_Pop[,c(2, 3, 4, 5, 7, 9, 11, 13, 15)]
startup.pop <- merge(aggdata.dept.WOP, data.pop10, by='CODGEO')
aggdata.dept.WOP
colnames(aggdata.dept.WOP) <- c('CODGEO', 'NB')
startup.pop <- merge(aggdata.dept.WOP, data.pop10, by='CODGEO')
mat.cor.startup.pop.WO.P <- cor(startup.pop[,-c(1,3)])
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
colnames(aggdata.dept.WOP) <- c('CODGEO', 'NBStartups')
data.pop <- read.csv("CSV//AgePop.csv", header = TRUE, sep=';')
data.pop10 <- data_Pop[,c(2, 3, 4, 5, 7, 9, 11, 13, 15)]
startup.pop <- merge(aggdata.dept.WOP, data.pop10, by='CODGEO')
mat.cor.startup.pop.WO.P <- cor(startup.pop[,-c(1,3)])
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
ggplot(startup.pop.without.Paris, aes(y=startup.pop.without.Paris$Nb, x=startup.pop.without.Paris$Dept, fill=startup.pop.without.Paris$Classe)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle = 90, hjust = 0)) +
ggtitle("Type de Startups") +
labs(x="Type" , y = "Nombre de startups")
ggsave("Images\\StartupsParDepartementsWithoutParis.png")
best.dept10 <- startup.pop[order(startup.pop$NBStartups),]$CODGEO
best.dept10
best.dept10 <- tail(startup.pop[order(startup.pop$NBStartups),]$CODGEO,10)
best.dept10 <- tail(startup.pop[order(startup.pop$NBStartups),]$CODGEO,10)
best.dept10
starups.best.10 <- startup.pop.without.Paris[startup.pop.without.Paris$Dept %in% best.dept10,]
ggplot(starups.best.10, aes(y=starups.best.10$Nb, x=starups.best.10$Dept, fill=starups.best.10$Classe)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle = 90, hjust = 0)) +
ggtitle("Type de Startups") +
labs(x="Type" , y = "Nombre de startups")
ggsave("Images\\DixDépartementMeilleurCreationStartups.png")
salary <- read.csv('CSV//Salaires2012_clean.csv', sep=';', header=TRUE)
salary <- read.csv('CSV//Salaires2012_clean.csv', sep=';', header=TRUE)
head(salary)
colnames(salary)
salary.clean <- salary[,c(4, 5, 6, 7, 8)]
head(salary.clean)
startups.salary <- merge(aggdata.dept.WOP, salary.clean, by='CODGEO')
salary.clean <- salary[,c(2, 4, 5, 6, 7, 8)]
startups.salary <- merge(aggdata.dept.WOP, salary.clean, by='CODGEO')
mat.cor.startup.salary.WOP <- cor(startups.salary[,-c(1)])
corrplot(mat.cor.startup.salary.WOP,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
mat.cor.startup.salary.WOP
mat.cor.startup.salary.WOP <- cor(startups.salary[,-1])
mat.cor.startup.salary.WOP
startups.salary[,-1]
startups.salary <- merge(aggdata.dept.WOP, salary.clean, by='CODGEO')
startups.salary
aggdata.dept.WOP
salary.clean
head(salary.clean)
head(salary)
salary_dept <- aggregate(salary,by = list(car=salary$Dept), FUN=mean)
salary <- read.csv('CSV//Salaires2012_clean.csv', sep=';', header=TRUE)
salary_dept <- aggregate(salary,by = list(car=salary$Dept), FUN=mean)
salary.clean <- salary[,c(2, 4, 5, 6, 7, 8)]
head(salary.clean)
salary$Dept
salary_dept <- aggregate(salary,by = list(car=salary$Dept), FUN=mean)
head(salary_dept)
salary.clean <- salary[,c(2, 4, 5, 6, 7, 8)]
colnames(salary_dept)
salary.clean <- salary_dept[,c(1, 5, 6, 7, 8, 9)]
head(salary.clean)
colnames(salary.clean) <- c('CODGEO', "S", "SC", "SP", "SE", "SO")
agg.salary <- aggregate(salary.clean$, )
startups.salary <- merge(aggdata.dept.WOP, salary.clean, by='CODGEO')
mat.cor.startup.salary.WOP <- cor(startups.salary[,-1])
corrplot(mat.cor.startup.salary.WOP,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
startup.pop$RatioCcreation
startup.pop$RatioCcreation <- startup.pop$NBStartup/startup.pop$P10_POP
startup.pop$RatioCcreation
length(startup.pop$RatioCcreation)
head(startup.pop)
df.ratio.creation <- startup.pop[,c(1,9)]
head(df.ratio.creation)
df.ratio.creation <- startup.pop[,c(1,11)]
head(df.ratio.creation)
startups.salaray.ratio <- merge(startups.salary, df.ratio.creation, by="CODGEO")
startups.salaray.ratio <- merge(startups.salary, df.ratio.creation, by="CODGEO")
mat.cor.startup.salary.WOP <- cor(startups.salaray.ratio[,-1])
corrplot(mat.cor.startup.salary.WOP,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
startup.pop <- merge(aggdata.dept.WOP, data.pop10, by='CODGEO')
mat.cor.startup.pop.WO.P <- cor(startup.pop[,-c(1,3)])
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
startup.pop.ratio <- merge(startup.pop, df.ratio.creation, by='CODGEO')
mat.cor.startup.pop.WO.P <- cor(startup.pop.ratio[,-c(1,3)])
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
png("CorrélationAgeRatioStartups.png")
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
dev.off()
ggplot(startup.pop.without.Paris, aes(x=startup.pop.without.Paris$NBStartup, y=startup.pop.without.Paris$P10_POP)) +
geom_point(aes(size=startup.pop.without.Paris$P10_POP15P),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=startup.pop.without.Paris$CODGEO), size=4, hjust=-1, vjust=-1)
ggplot(startup.pop.without.Paris, aes(x=startup.pop.ratio$NBStartups, y=startup.pop.ratio$P10_POP)) +
geom_point(aes(size=startup.pop.ratio$P10_3044_POP),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=startup.pop.without.Paris$CODGEO), size=4, hjust=-1, vjust=-1)
ggplot(startup.pop.ratio, aes(x=startup.pop.ratio$NBStartups, y=startup.pop.ratio$P10_POP)) +
geom_point(aes(size=startup.pop.ratio$P10_3044_POP),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=startup.pop.without.Paris$CODGEO), size=4, hjust=-1, vjust=-1)
ggplot(startup.pop.ratio, aes(x=startup.pop.ratio$NBStartups, y=startup.pop.ratio$P10_POP)) +
geom_point(aes(size=startup.pop.ratio$P10_3044_POP),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=startup.pop.ratio$CODGEO), size=4, hjust=-1, vjust=-1)
corrplot(mat.cor.patent.startup.pop,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
ggplot(startups.with.type, aes(y=startups.with.type$Nb, x=startups.with.type$Classe)) +
geom_bar(stat='identity', fill=startups.with.type$Classe) +
theme(axis.text.x = element_text(angle = 90, hjust = 0)) +
ggtitle("Type de Startups") +
labs(x="Type" , y = "Nombre de startups")
ggplot(startups.with.type, aes(y=startups.with.type$Nb, x=startups.with.type$Classe,  fill=startups.with.type$Classe)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle = 90, hjust = 0)) +
ggtitle("Type de Startups") +
labs(x="Type" , y = "Nombre de startups")
ggsave("Images\\TypeDeStartups.png")
library(ggplot2)
library(maps)
library(gcookbook)
library(corrplot)
library(rgl)
library(sp)
library(rgdal)
library(RColorBrewer)
library(gridExtra)
library(ggmap)
library(httr)
library(stringr)
library(plyr)
library(jsonlite)
which(startups.with.type.Togeocode$Lat)
which(startups.with.type.Togeocode$Lat =='NA')
for(i in 1:length(startups.with.type.Togeocode$Téléphone)){
tryCatch({
tmp <- GeocodeAdress(startups.with.type.Togeocode[i,]$UrlAdress)
startups.with.type.Togeocode[i,]$Lat <- tmp[1]
startups.with.type.Togeocode[i,]$Long <- tmp[2]
}, error=function(e){cat("ERROR :","There is some error", "\n")})
}
which(startups.with.type.Togeocode$Lat =='NA')
length(patents[patents$appln_filing_year==2014],)
patents$appln_filing_year==2014
length(patents[patents$appln_filing_year==2013],)
length(patents[patents$appln_filing_year==2013,])
length(patents[patents$appln_filing_year==2012,])
length(patents[,patents$appln_filing_year==2013])
length(patents[patents$appln_filing_year==2013,]$appln_id)
sum(patents[patents$appln_filing_year==2013,]$frac_invt)
sum(patents[patents$appln_filing_year==2013,])
length(patents[patents$appln_filing_year==2013,])
length(patents[patents$appln_filing_year==2013,]$appln_id)
length(patents[patents$appln_filing_year==2014,]$appln_id)
length(patents[patents$appln_filing_year==2012,]$appln_id)
ggplot(patents, aes(y=patents$frac_invt, x=as.factor(patents$YearMonth))) +
geom_bar(stat='identity')
ggplot(patents, aes(y=patents$frac_invt, x=patents$appln_filing_year)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle = 90, hjust = 0)) +
ggtitle("Type de Startups") +
labs(x="Type" , y = "Nombre de startups")
ggplot(patents, aes(y=patents$frac_invt, x=patents$appln_filing_year)) +
geom_bar(stat='identity') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
ggsave("Images\\NombreDeBrevetParAns.png")
aggdata.zipcode <- aggregate(patents$frac_invt, by=list(patents$Dept), FUN=sum, na.rm=TRUE)
aggdata.zipcode <- aggdata.zipcode[aggdata.zipcode$Group.1<=95,]
aggdata.zipcode
ggplot(patents, aes(y=patents$frac_invt, x=patents$Dept, fill=patents$appln_filing_year)) +
geom_bar(stat='identity', position='dodge') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
ggplot(patents, aes(y=patents$frac_invt, x=patents$Dept, fill=patents$appln_filing_year)) +
geom_bar(stat='identity') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
head(aggdata.zipcode)
colnames(aggdata.zipcode) <- c("CODGEO", "NBPatens")
best.dept.patents <- tail(aggdata.zipcode[order(aggdata.zipcode$NBPatens),],10)
patents.best <- patents[patents$Dept %in% best.dept.patents,]
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept, fill=patents.best$appln_filing_year)) +
geom_bar(stat='identity') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept)) +
geom_bar(stat='identity') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
patents.best <- patents[patents$Dept %in% best.dept.patents,]
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept)) +
geom_bar(stat='identity') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
head(patents.best)
best.dept.patents
patents.best <- patents[,patents$Dept %in% best.dept.patents]
patents.best
best.dept.patents <- tail(aggdata.zipcode[order(aggdata.zipcode$NBPatens),],10)$CODGEO
patents.best <- patents[patents$Dept %in% best.dept.patents]
patents.best <- patents[patents$Dept %in% best.dept.patents,]
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept)) +
geom_bar(stat='identity') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept, fill=patents.best$appln_filing_year)) +
geom_bar(stat='identity') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept)) +
geom_bar(stat='identity', fill='red') +
ggtitle("Dépots de brevet par an") +
labs(x="Années" , y = "Nombre de brevet")
ggtitle("Dépots de brevet par an pour les 10 plus gros départements") +
labs(x="Années" , y = "Départements")
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept)) +
geom_bar(stat='identity', fill='red') +
ggtitle("Dépots de brevet par an pour les 10 plus gros départements") +
labs(x="Années" , y = "Départements")
ggsave("Images\\NombreDeBrevetParAns10BEST.png")
france1<-map(database="france")
#Récupère les numéros des départements correspondant à la carte
num <- read.csv("CSV//DeptNum.csv", header= TRUE, sep=';')
num_cor <- num$Num
#Renomme les départements de la carte avec leur numéro
france1$names <- num_cor
dpt <- aggdata.zipcode$Group.1
matche<-match.map(france1,dpt,exact=TRUE)
matche
dpt <- aggdata.zipcode$CODGEO
matche<-match.map(france1,dpt,exact=TRUE)
matche
blues <- colorRampPalette(brewer.pal(9,"Blues"))(100)
colors <- blues[matche]
map(database="france", fill=TRUE,col=colors,resolution=0)
#Ajoute les plus grandes villes sur la carte
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "red")
#Précise le nom de ces villes
text(grandesvilles$Longitude, grandesvilles$Latitude+0.2, grandesvilles$Nom, col="red", cex = 0.5)
map(database="france", fill=TRUE,col=colors,resolution=0)
#Ajoute les plus grandes villes sur la carte
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "red")
#Précise le nom de ces villes
text(grandesvilles$Longitude, grandesvilles$Latitude+0.2, grandesvilles$Nom, col="red", cex = 1)
map(database="france", fill=TRUE,col=colors,resolution=0)
#Ajoute les plus grandes villes sur la carte
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "red")
#Précise le nom de ces villes
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, col="red", cex = 1)
png("carteDepotDeBrevet.png")
map(database="france", fill=TRUE,col=colors,resolution=0)
#Ajoute les plus grandes villes sur la carte
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "red")
#Précise le nom de ces villes
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, col="red", cex = 1)
dev.off()
map(database="france",resolution=0, xlim=xlim_idf, ylim = ylim_idf)
points(startups$Long, startups$Lat, pch=20, col = "red", cex=1)
map(database="france",resolution=0)
points(startups$Long, startups$Lat, pch=20, col = "red", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude, grandesvilles$Nom, pch=20, col = "black")
map(database="france",resolution=0)
points(startups$Long, startups$Lat, pch=20, col = "red", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
head(aggdata.zipcode)
startups.z
startup.pop
startup.zipcode <- startups.pop[order(startups.pop$NBStartups),]
startup.zipcode <- startup.pop[order(startup.pop$NBStartups),]
startup.zipcode <- startup.pop[order(startup.pop$NBStartups),][,c(1,2, 4, 7)]
startup.zipcode
age.Pop <- read.csv("AgePop.csv" , sep =';')
age.Pop <- read.csv("CSV\\AgePop.csv" , sep =';')
startup.pop <- merge(aggdata.dept, age.Pop, by='CODGEO')
startup.pop
head(startup.pop)
colnames(startup.pop)
startup.pop <- merge(aggdata.dept, age.Pop, by='CODGEO')[,c(1,2, 5,10)]
startup.pop
startup.zipcode <- startup.pop[order(startup.pop$NBStartup),]
head(startup.zipcode)
tail(startup.zipcode)
dpt.startup
dpt.startup <- startup.zipcode$CODGEO
match.startup<-match.map(france1,dpt.startup,exact=TRUE)
yellows <- colorRampPalette(brewer.pal(9,"YlOrRd"))(100)
map(database="france",resolution=0, col=colors.startup)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
colors.startup<-yellows[match.startup]
map(database="france",resolution=0, col=colors.startup)
colors.startup<-yellows[match.startup]
map(database="france",resolution=0, fill=colors.startup)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
colors.startup<-yellows[match.startup]
map(database="france",resolution=0, col=colors.startup, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
reds <- colorRampPalette(brewer.pal(9,"Reds"))(100)
colors.startup<-yellows[match.startup]
1/11
legend("bottomleft", legend = seq(1, startup.zipcode[length(startup.zipcode$CODGEO),], 30), pch = 20, col = reds[seq(91,0, -91/11)], title="(en %)")
startup.zipcode[length(startup.zipcode$CODGEO),]
map(database="france",resolution=0, col=colors.startup, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
legend("bottomleft", legend = seq(1, 1000, 100), pch = 20, col = reds[seq(91,0, -91/11)], title="(en %)")
map(database="france",resolution=0, col=colors.startup, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
legend("bottomleft", legend = seq(1, 1000, 100), pch = 20, col = reds[seq(91,0, -91/11)])
legend("bottomleft", legend = rev(seq(1, 1000, 100)), pch = 20, col = reds[seq(91,0, -91/11)])
legend("bottomleft", legend = rev(seq(1, 1500, 150)), pch = 20, col = reds[seq(91,0, -91/11)])
png("Images\\NombreStartupsParDept.png")
colors.startup<-yellows[match.startup]
map(database="france",resolution=0, col=colors.startup, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
title("Nombre de startups par départements")
legend("bottomleft", legend = rev(seq(1, 1500, 150)), pch = 20, col = reds[seq(91,0, -91/11)])
dev.off()
png("Images\\NombreStartupsParDept.png")
map(database="france",resolution=0, col=colors.startup, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
title("Nombre de startups par départements")
legend("bottomleft", legend = rev(seq(1, 1500, 150)), pch = 20, col = reds[seq(91,0, -91/11)])
dev.off()
png("Images\\CarteNombreStartupsParDept3044.png")
map(database="france",resolution=0, col=colors.startup, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "red", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
title("Taux de 30 - 44 ans")
legend("bottomleft", legend = rev(seq(10, 20, 1)), pch = 20, col = blues[seq(91,0, -91/11)])
dev.off()
png("Images\\CarteNombreStartupsParDept3044.png")
map(database="france",resolution=0, col=colors.3044, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "red", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
title("Taux de 30 - 44 ans")
legend("bottomleft", legend = rev(seq(10, 20, 1)), pch = 20, col = blues[seq(91,0, -91/11)])
dev.off()
startup.3044 <- startup.pop[order(startup.pop$P10_3044_POP),]
dpt.startup <- startup.zipcode$CODGEO
dpt.3044 <- startup.zipcode$CODGEO
match.startup<-match.map(france1,dpt.startup,exact=TRUE)
match.3044<-match.map(france1,dpt.startup,exact=TRUE)
reds <- colorRampPalette(brewer.pal(9,"Reds"))(100)
blues <- colorRampPalette(brewer.pal(9,"BLues"))(100)
colors.startup<-reds[match.startup]
colors.3044<-blues[match.3044]
png("Images\\NombreStartupsParDept.png")
map(database="france",resolution=0, col=colors.startup, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "green", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
title("Nombre de startups par départements")
legend("bottomleft", legend = rev(seq(1, 1500, 150)), pch = 20, col = reds[seq(91,0, -91/11)])
dev.off()
png("Images\\CarteNombreStartupsParDept3044.png")
map(database="france",resolution=0, col=colors.3044, fill=TRUE)
points(startups$Long, startups$Lat, pch=20, col = "red", cex=1)
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "black")
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, pch=20, col = "black")
title("Taux de 30 - 44 ans")
legend("bottomleft", legend = rev(seq(10, 20, 1)), pch = 20, col = blues[seq(91,0, -91/11)])
dev.off()
corrplot(mat.cor.patent.startup.pop,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
mat.cor.startup.pop <- cor(startups.pop.ratio[,-1])
corrplot(mat.cor.startup.pop,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
mat.cor.startup.pop <- cor(startup.pop[,-1])
corrplot(mat.cor.startup.pop,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
png("CorrélationAgeRatioStartups.png")
corrplot(mat.cor.startup.pop.WO.P,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
dev.off()
ggplot(patents.best, aes(y=patents.best$frac_invt, x=patents.best$Dept)) +
geom_bar(stat='identity', fill='red') +
ggtitle("Dépots de brevet pour les 10 plus gros départements") +
labs(x="Années" , y = "Départements")
ggsave("Images\\NombreDeBrevetParAns10BEST.png")
aggdata.zipcode
aggdata.z
patents.best.df <-aggdata.zipcode[order(aggdata.zipcode$NBPatens),]
dpt <- patents.best.df$CODGEO
matche<-match.map(france1,dpt,exact=TRUE)
blues <- colorRampPalette(brewer.pal(9,"Blues"))(100)
colors <- blues[matche]
png("carteDepotDeBrevet.png")
map(database="france", fill=TRUE,col=colors,resolution=0)
#Ajoute les plus grandes villes sur la carte
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "red")
#Précise le nom de ces villes
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, col="red", cex = 1)
dev.off()
ggplot(aggdata.zipcode.pop, aes(x=aggdata.zipcode.pop$P10_POP, y=aggdata.zipcode.pop$NB_PATENTS)) +
geom_point(aes(size=aggdata.zipcode.pop$P10_POP),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.pop$CODGEO), size=4, hjust=-1, vjust=-1)
ggsave("PopNbPatents.png")
ggplot(aggdata.zipcode.salaire, aes(x=aggdata.zipcode.salaire$NB_PATENTS, y=aggdata.zipcode.salaire$C10_CADRE)) +
geom_point(aes(size=aggdata.zipcode.salaire$P10_POP15P),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.salaire$CODGEO), size=4, hjust=-1, vjust=-1)
ggsave("SalairePatents.png")
corrplot(cor_mat_salaire,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
png("CorrélationSalairePatents.png")
corrplot(cor_mat_salaire,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
dev.off()
corrplot(cor_mat,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
png("Images\\carteDepotDeBrevet.png")
map(database="france", fill=TRUE,col=colors,resolution=0)
#Ajoute les plus grandes villes sur la carte
points(grandesvilles$Longitude, grandesvilles$Latitude, pch=20, col = "red")
#Précise le nom de ces villes
text(grandesvilles$Longitude, grandesvilles$Latitude+0.4, grandesvilles$Nom, col="red", cex = 1)
dev.off()
ggplot(aggdata.zipcode.pop, aes(x=aggdata.zipcode.pop$P10_POP, y=aggdata.zipcode.pop$NB_PATENTS)) +
geom_point(aes(size=aggdata.zipcode.pop$P10_POP),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.pop$CODGEO), size=4, hjust=-1, vjust=-1)
ggsave("Images\\PopNbPatents.png")
ggplot(aggdata.zipcode.pop, aes(x=aggdata.zipcode.pop$NB_PATENTS, y=aggdata.zipcode.pop$P10_3044_POP)) +
geom_point(aes(size=aggdata.zipcode.pop$P10_POP),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.pop$CODGEO), size=4, hjust=-1, vjust=-1)
cor_mat <- cor(aggdata.zipcode.pop[,c(2,5,6, 8, 10, 12, 14, 16)])
corrplot(cor_mat)
png("Images\\CorrélationPatentsPopulation.png")
corrplot(cor_mat,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
dev.off()
pairs(aggdata.zipcode.pop[,c(2,5,6, 8, 10, 12, 14, 16)])
data_salaire <- read.csv('CSV//EmploiPop.csv', sep=';', header=TRUE)
aggdata.zipcode.salaire <- merge(aggdata.zipcode, data_salaire, by='CODGEO')
cor_mat_salaire <- cor(aggdata.zipcode.salaire[,c(2,5,6, 8, 10, 12, 14, 16)])
png("Images\\CorrélationSalairePatents.png")
corrplot(cor_mat_salaire,method="shade",shade.col=NA,tl.col="black",tl.srt=45, addCoef.col="black")
dev.off()
ggplot(aggdata.zipcode.salaire, aes(x=aggdata.zipcode.salaire$NB_PATENTS, y=aggdata.zipcode.salaire$C10_CADRE)) +
geom_point(aes(size=aggdata.zipcode.salaire$P10_POP15P),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.salaire$CODGEO), size=4, hjust=-1, vjust=-1)
ggsave("Images\\SalairePatents.png")
aggdata.zipcode.salaire
ggplot(aggdata.zipcode.salaire, aes(x=aggdata.zipcode.salaire$NBPatens, y=aggdata.zipcode.salaire$C10_CADRE)) +
geom_point(aes(size=aggdata.zipcode.salaire$P10_POP15P),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.salaire$CODGEO), size=4, hjust=-1, vjust=-1)
ggsave("Images\\SalairePatents.png")
data_salaire
ggplot(aggdata.zipcode.salaire, aes(x=aggdata.zipcode.salaire$NBPatens, y=aggdata.zipcode.salaire$C10_CADRE)) +
geom_point(aes(size=aggdata.zipcode.salaire$P10_POP15P),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.salaire$CODGEO), size=4, hjust=-1, vjust=-1) +
ggtitle("Nombre de brevets en fonction de la part de cadre") +
labs(x='Nombre de brevet', y='Pourcentage de cadre')
ggsave("Images\\EmploiPatents.png")
ggplot(aggdata.zipcode.pop, aes(x=aggdata.zipcode.pop$P10_POP, y=aggdata.zipcode.pop$NB_PATENTS)) +
geom_point(aes(size=aggdata.zipcode.pop$P10_POP),shape=1) +
scale_size_continuous(range = c(3, 10)) +
geom_smooth(method=lm) +
geom_text(aes(label=aggdata.zipcode.pop$CODGEO), size=4, hjust=-1, vjust=-1)+
ggtitle("Nombre de brevet en fonction de la population ") +
labs(x="Population", y='Nombre de brevet')
ggsave("Images\\PopNbPatents.png")
